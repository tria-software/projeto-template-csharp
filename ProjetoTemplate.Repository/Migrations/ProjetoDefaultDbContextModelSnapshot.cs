// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetoTemplate.Repository;

#nullable disable

namespace ProjetoTemplate.Repository.Migrations
{
    [DbContext(typeof(ProjetoTemplateDbContext))]
    partial class ProjetoTemplateDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProjetoTemplate.Domain.Models.ChangePassword", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<bool>("Used")
                        .HasColumnType("bit");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("ChangePassword");
                });

            modelBuilder.Entity("ProjetoTemplate.Domain.Models.LayoutColumns", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Columns")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateBy")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Table")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("LayoutColumns");
                });

            modelBuilder.Entity("ProjetoTemplate.Domain.Models.Profile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("AccessAllModules")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("LastUpdateBy")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Profile");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AccessAllModules = true,
                            CreateDate = new DateTime(2024, 1, 4, 0, 0, 1, 0, DateTimeKind.Unspecified),
                            CreatedBy = "System",
                            Description = "Administrador",
                            IsAdmin = true,
                            Status = true
                        });
                });

            modelBuilder.Entity("ProjetoTemplate.Domain.Models.ProfileAccess", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Module")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<long>("ProfileId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.ToTable("ProfileAccess");
                });

            modelBuilder.Entity("ProjetoTemplate.Domain.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<bool>("FirstAccess")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("LastUpdateBy")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<long>("ProfileId")
                        .HasColumnType("bigint");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateDate = new DateTime(2024, 1, 4, 0, 0, 1, 0, DateTimeKind.Unspecified),
                            CreatedBy = "System",
                            Email = "admin",
                            FirstAccess = false,
                            LastName = "do Sistema",
                            Login = "admin",
                            Name = "Administrador",
                            Password = "ejnKgi6XKgefY7xO5+eGavzl5l/v8Zeb",
                            ProfileId = 1L,
                            Status = true
                        });
                });

            modelBuilder.Entity("ProjetoTemplate.Domain.Models.LayoutColumns", b =>
                {
                    b.HasOne("ProjetoTemplate.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProjetoTemplate.Domain.Models.ProfileAccess", b =>
                {
                    b.HasOne("ProjetoTemplate.Domain.Models.Profile", "Profile")
                        .WithMany("ProfileAccess")
                        .HasForeignKey("ProfileId")
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("ProjetoTemplate.Domain.Models.User", b =>
                {
                    b.HasOne("ProjetoTemplate.Domain.Models.Profile", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileId")
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("ProjetoTemplate.Domain.Models.Profile", b =>
                {
                    b.Navigation("ProfileAccess");
                });
#pragma warning restore 612, 618
        }
    }
}
